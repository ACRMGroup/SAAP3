package config;

# The location of the installed SAAP code
# You can't use $ENV{'HOME'} for the web install
# $saapHome="$ENV{'HOME'}/saapinstall";
$saapHome="/home/amartin/git/SAAP3";

#########################################################################
# Config for the web interface                                          #
#########################################################################
# The location of the web site
$webServer="http://home.stagleys.co.uk";  # No trailing slash!
$webRoot="/home/httpd/html";
$saapWeb="$webRoot/saap";
$webTmpDir="$webRoot/tmp";

$saapURL="/saap";
$predictURL="$saapURL/dap/";

# The location of header, footer, main_menu and mutations_menu TT files
$webIncludes="$saapHome/www/includes";

#########################################################################
# Config for the SAAPdap pipeline                                       #
#########################################################################
# Email address for EBI Webservices
$email="andrew\@andrew-martin.org"; 

# Temporary directory
$tmpDir="/var/tmp";

# Location of the PDB - what you put on the start and end of a PDB
# code to find the file
$pdbPrep="/data/pdb/pdb";
$pdbExt=".ent";

# Location for storing the cached results from SAAP analysis
# Put this wherever you want with lots of space!
$cacheDir="$saapHome/cache";

# The XMAS files
$xmasDir="/acrm/data/xmas/pdb";

# Use local or web services for SwissProt
#$LocalSwissProt=1;     # Use local version of SwissProt
$LocalSwissProt=0;      # Use web services for SwissProt

# If using local Swissprot...
# ---------------------------
# Location of the SwissProt data
$swissprot="/acrm/data/swissprot/full/uniprot_sprot.dat";
# Program for indexing SwissProt
$indexsprot="$saapHome/scripts/indexfasta/indexswissprot.pl";
# Program for retrieving an entry from SwissProt
$getsprot="$saapHome/scripts/indexfasta/getswissprot.pl";

##########################################################################
#             Shouldn't need to alter anything below here                #
#                                                                        #
#             The data analysis pipeline                                 #
##########################################################################
# Location of the R executable
$RExe="/usr/bin/R";
# SAAP src and binary directory
$saapSrcDir="$saapHome/src";
$saapBinDir="$saapHome/bin";
# Binary and data directories for other packages used by SAAP
$binDir="$saapHome/share/bin";
$dataDir="$saapHome/share/data";
# $checkHBondDir="$saapHome/cprogs/checkhbond";

# Dependent on saapHome
$pluginDir="$saapHome/plugins";
$libDir="$saapHome/lib";
$localBinDir="$saapHome/bin";
$predHome="$saapHome/pred";

# Dependent on $dataDir
$mmDataDir="$dataDir";
$specsimHashFile="$dataDir/specsim.values";
$specsimDumpFile="$dataDir/specsim.dump";
$matrixFile="$dataDir/pet91.mat";

# Dependent on $pluginDir
$pluginDataDir="$pluginDir/data";
#$modulesDir="$pluginDir/modules";

# Dependent on $libDir
$RProg="$libDir/conservation_threshold.R";

# Dependent on $cacheDir
$xmasCacheDir="$cacheDir/xmas";
$avpCacheDir="$cacheDir/avp";
$consCacheDir="$cacheDir/cons";
$hbCacheDir="$cacheDir/pdbhbond";
$solvCacheDir="$cacheDir/pdbsolv";
$pdbssCacheDir="$cacheDir/pdblistss";
$sprotCacheDir="$cacheDir/sprot";
$sprotIndex="$sprotCacheDir/sprot.idx";


# Dependent on $checkHBondDir
#$checkHBondDataDir="$checkHBondDir/data";
#$checkHBondBinDir="$checkHBondDir/bin";

##########################################################################
#                             The web site                               #
##########################################################################

$saapMultiPipeline   = "$saapBinDir/multiUniprotPipeline";
$saapUniprotPipeline = "$saapBinDir/uniprotPipeline";
$saapMultiJSON2HTML  = "$saapBinDir/multiJson2html";
$saapPipeline        = "$saapBinDir/pipeline";
$saapJSON2HTML       = "$saapBinDir/json2html";
$gifDir              = "$saapWeb/webdata";
$predBin             = "$predHome/bin";
$ENV{'PBIN'}         = $predBin;
$EOF                 = "\n__EOF__\n";

1;
